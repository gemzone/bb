<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<context:component-scan base-package="com.jshio.breadboard" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory 
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	-->
	
	
	
	
	<!-- Thymeleaf -->
	
	
    <!-- Thymeleaf View Resolver - implementation of Spring's ViewResolver interface -->
    <bean id="viewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8" />
    </bean>
    
    <!-- Thymeleaf Template Engine (Spring4-specific version) -->
    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolvers">
            <set>
                <ref bean="templateResolver" />
            </set>
        </property>
    </bean>
    
    <!-- Thymeleaf Template Resolver -->
    <bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML" />
        <property name="cacheable" value="false" />
    </bean>
	

	<!-- Hibernate -->
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="locations">
	        <list>
	            <value>classpath:hibernate.properties</value>
	            <value>classpath:application.properties</value>
	        </list>
	    </property>
	</bean>

	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	    <property name="poolName" value="springHikariCP" />
	    <property name="connectionTestQuery" value="SELECT 1" />
	    <property name="dataSourceClassName" value="${hibernate.hikari.dataSourceClassName}" />
	    <property name="maximumPoolSize" value="${hibernate.hikari.maximumPoolSize}" />
	    <property name="idleTimeout" value="${hibernate.hikari.idleTimeout}" />
	
	    <property name="dataSourceProperties">
	        <props>
	            <prop key="url">${hibernate.hikari.dataSource.url}</prop>
	            <prop key="user">${hibernate.hikari.dataSource.user}</prop>
	            <prop key="password">${hibernate.hikari.dataSource.password}</prop>
	        </props>
	    </property>
	</bean>

	<!-- HikariCP configuration -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	    <constructor-arg ref="hikariConfig" />
	</bean>

<!-- 
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<property name="url" value="jdbc:sqlserver://192.168.0.19:21433;" />
		<property name="username" value="test" />
		<property name="password" value="" />
	</bean>
-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
       <!--  <property name="packagesToScan" value="com.jshio.breadboard"/> -->
        <!-- <mapping resource="com/jshio/breadboard/domain/Board.hbm.xml" /> -->
		<!-- <mapping class="com.jshio.breadboard.domain.Board" /> -->
	
		<property name="mappingResources">
                <list>
                        <value>mapping/Board.hbm.xml</value>
                        <value>mapping/named-queries.hbm.xml</value>
                </list>
        </property>
        
        
        
        
        
<!-- 
		<property name="annotatedClasses">
            <list>
                <value>com.jshio.breadboard.controller.HomeController</value>
            </list>
        </property>
		-->

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2008Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager"
        class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

	
	
	
	
	
	
	
	
	
</beans>
